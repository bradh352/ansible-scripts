vrrp_script {{ item.name }} {
{% if item.healthcheck is not defined or item.healthcheck.type is not defined %}
{{ notdefiend | mandatory(msg='healthcheck.type must be defined') }}
{% elif item.healthcheck.type == "ip" %}
  script "/usr/local/bin/healthcheck_ip.sh {{ item.healthcheck.host|default("localhost") }} {{ item.healthcheck.port }}"
{% elif item.healthcheck.type == "tls" %}
  script "/usr/local/bin/healthcheck_tls.sh {{ item.healthcheck.host|default("localhost") }} {{ item.healthcheck.port }} {{ item.healthcheck.fqdn|default(item.healthcheck.host|default("localhost")) }} {{ '1' if item.healthcheck.verify_certs|default(false) else '0' }}"
{% elif item.healthcheck.type == "script" %}
  script "{{ item.healthcheck.script }} {{ item.healthcheck.script_arg|default('') }}"
{% else %}
{{ notdefiend | mandatory(msg='healthcheck.type value ' ~ healthcheck.type ~ ' not valid') }}
{% endif %}
  interval {{ item.healthcheck_interval|default(15) }}
  timeout {{ item.healthcheck_timeout|default(10) }}
  rise 3
  fall 1
  init_fail
}

vrrp_instance {{ item.name }} {
{# Uses last digit of the first ipv4 VIP as the router id #}
  virtual_router_id {{ item.ips | ansible.utils.ipv4 | first | ansible.utils.ipaddr('address') | split('.') | last | default("1") }}
  state BACKUP
  interface {{ item.vrrp_interface|default(item.interface) }}
{% if item.priority_host is defined and item.priority_host == inventory_hostname %}
  priority 150
{% else %}
  priority 100
{% endif %}
{% if item.priority_host is not defined %}
  nopreempt
{% endif %}

{% if item.ips|ansible.utils.ipv4|count > 0 and item.ips|ansible.utils.ipv6|count > 0 %}
  virtual_ipaddress {
{% for ip in item.ips | ansible.utils.ipv4 %}
    {{ ip }} dev {{ item.interface }}
{% endfor %}
  }

  virtual_ipaddress_excluded {
{% for ip in item.ips | ansible.utils.ipv6 %}
    {{ ip }} dev {{ item.interface }}
{% endfor %}
  }
{% else %}
  virtual_ipaddress {
{% for ip in item.ips %}
    {{ ip }} dev {{ item.interface }}
{% endfor %}
  }
{% endif %}

  track_script {
    {{ item.name }}
  }
}
