---
- name: ensure firewalld is started and enabled
  service:
    name: firewalld
    state: started
    enabled: true

- name: "open up port {{ ssh_port|default(22) }} for SSHd alternative port"
  firewalld:
    immediate: yes
    permanent: yes
    port: "{{ ssh_port|default(22) }}/tcp"
    state: enabled

- name: "SELinux allow SSHd to use port {{ ssh_port|default(22) }}"
  seport:
    proto: tcp
    ports: "{{ ssh_port|default(22) }}"
    setype: ssh_port_t

- name: remove firewalld services no longer desired
  firewalld:
    service: "{{ item }}"
    immediate: yes
    permanent: yes
    state: disabled
  with_items:
    - cockpit
    - sshd

- name: check if mta is already set to sendmail
  shell: alternatives --display mta | grep link | grep /usr/sbin/sendmail.exim
  changed_when: false
  failed_when: false
  register: mta

- name: set mta alternative to exim
  command: alternatives --set mta /usr/sbin/sendmail.exim
  when: mta.failed

# Kernel Dump is not needed on a production system, disable.
# This frees up about 160MB of RAM, especially important on low-memory VMs.
- name: "kdump: disable service"
  service:
    name: kdump
    state: stopped
    enabled: no
  when: ansible_os_family == 'RedHat'

- name: "kdump: disable crashkernel"
  lineinfile:
     path: /etc/default/grub
     backrefs: yes
     regexp: '^GRUB_CMDLINE_LINUX=(.*)crashkernel=[a-z]+(.*)'
     line: 'GRUB_CMDLINE_LINUX=\1crashkernel=no\2'
     state: present
  when: ansible_os_family == 'RedHat'
  notify: update_grub


# Automatic updates
- name: "Automatic updates: {{ 'yes' if base_autoupdate else 'no' }}"
  dnf:
    name: dnf-automatic
    state: "{{ 'installed' if base_autoupdate else 'absent' }}"

- name: "Automatic updates: config"
  copy:
    src: dnf_automatic.conf
    dest: /etc/dnf/automatic.conf
    mode: 0600
    owner: root
    group: root
  when: base_autoupdate

- name: "Automatic updates: systemd timer config dir"
  file:
    path: /etc/systemd/system/dnf-automatic.timer.d/
    state: directory
    mode: 0700
    owner: root
    group: root
  when: base_autoupdate

- name: "Automatic updates: schedule"
  copy:
    src: dnf_automatic_schedule.conf
    dest: /etc/systemd/system/dnf-automatic.timer.d/local.conf
    mode: 0600
    owner: root
    group: root
  when: base_autoupdate

- name: "Automatic updates: started"
  systemd:
    name: dnf-automatic.timer
    enabled: yes
    state: started
  when: base_autoupdate
