---

# Hardening as per CIS
- name: "CIS: disable loading of unneeded filesystem types"
  copy:
    src: modprobe_CIS.conf
    dest: /etc/modprobe.d/CIS.conf
    owner: root
    group: root
    mode: 0600

- name: "CIS: RedHat: remove unneeded or insecure software packages"
  dnf:
    name: [ "setroubleshoot", "mcstrans", "telnet-server", "telnet", "rsh-server", "rsh",
            "ypbind", "ypserv", "tftp", "talk", "talk-server", "vsftpd" ]
    state: absent
  when: ansible_os_family == 'RedHat'

- name: "CIS: Debian: remove unneeded or insecure software packages"
  ansible.builtin.apt:
    name: [ "setroubleshoot", "mcstrans", "telnet-server", "telnet", "rsh-server", "rsh",
            "ypbind", "ypserv", "tftp", "talk", "talk-server", "vsftpd" ]
    state: absent
  when: ansible_os_family == 'Debian'

- name: "CIS: disable unneeded services (likely these aren't installed)"
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  failed_when: false
  with_items:
    - chargen-dgram
    - chargen-stream
    - daytime-dgram
    - daytime-stream
    - echo-dgram
    - echo-stream
    - tcpmux-server
    - avahi-daemon
    - cups

- name: "CIS: set owner, group and perms on grub.cfg"
  file:
    path: "{{ '/boot/grub2/grub.cfg' if ansible_os_family == 'RedHat' else '/boot/grub/grub.cfg' }}"
    owner: root
    group: root
    mode: 0600
  notify: update_grub

- name: "CIS: install /etc/grub.d/40_custom for boot loader password"
  template:
    src: grub_40_custom
    dest: /etc/grub.d/40_custom
    owner: root
    group: root
    mode: 0755
  notify: update_grub

- name: "CIS: update /etc/grub/10_linux to ensure boot loader password is only for changes not booting"
  lineinfile:
    dest: /etc/grub.d/10_linux
    backrefs: yes
    regexp: '^CLASS="(--unrestricted |)(.*)"'
    state: present
    line: 'CLASS="--unrestricted \2"'
  when: ansible_os_family == "Debian"
  notify: update_grub

- name: "CIS: update /etc/default/grub to enable audit logging at boot"
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
    state: present
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="audit=1"'
  notify: update_grub

- name: "CIS: restrict core dumps"
  lineinfile:
    path: /etc/security/limits.conf
    line: '*                hard    core            0'
    regexp: '^\* +core .*'
    create: true
    owner: root
    group: root
    mode: 0600

- name: "CIS: set configs in sysctl.d"
  copy:
    src: sysctl_80-CIS.conf
    dest: /etc/sysctl.d/80-CIS.conf
    owner: root
    group: root
    mode: 0600

- name: "CIS: set default umask in login.defs"
  lineinfile:
    dest: /etc/login.defs
    state: present
    line: "UMASK           077"
    regexp: "^UMASK .*"

- name: "CIS: add auditd.conf configuration"
  copy:
    src: auditd.conf
    dest: /etc/audit/auditd.conf
    owner: root
    group: root
    mode: 0600
  register: auditd_conf

- name: "CIS: add configuration to /etc/audit.d/rules.d/audit.rules"
  template:
    src: audit.rules.j2
    dest: /etc/audit/rules.d/audit.rules
    owner: root
    group: root
    mode: 0600
  register: audit_rules

- name: "CIS: add configuration to /etc/audit.d/rules.d/pcidss.rules"
  copy:
    src: audit_pcidss.rules
    dest: /etc/audit/rules.d/pcidss.rules
  register: pcidss_rules

- name: "CIS: run augenrules when audit rules have changed"
  command: "augenrules --load"
  when: audit_rules.changed or pcidss_rules.changed
  notify: auditd_reload

- name: "CIS: enable auditd to write to syslog for log collection"
  copy:
    src: audit_syslog.conf
    dest: '/etc/audit/plugins.d/syslog.conf'
    owner: root
    group: root
    mode: 0640

- name: "CIS: enable critical daemons"
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - auditd
    - "{{ 'crond' if ansible_os_family == 'RedHat' else 'cron' }}"

- name: "CIS: set owner,group and perms for cron and anacron files, and blank them out"
  copy:
    dest: "/etc/{{ item }}"
    owner: root
    group: root
    mode: 0600
    force: no
    content: ""
  with_items:
    - anacrontab
    - crontab
    - at.allow
    - cron.allow

- name: "CIS: set owner,group and perms for cron directories"
  file:
    path: "/etc/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0700
  with_items:
    - cron.d
    - cron.hourly
    - cron.daily
    - cron.weekly
    - cron.monthly

- name: "CIS: set user umask in bashrc"
  replace:
    path: "{{ '/etc/bashrc' if ansible_os_family == 'RedHat' else '/etc/bash.bashrc' }}"
    regexp: 'umask [0-9]+'
    replace: "umask 077"

- name: "CIS: set user umask in /etc/profile.d/cis.sh"
  copy:
    src: profile_cis.sh
    dest: /etc/profile.d/cis.sh
    owner: root
    group: root
    mode: 0700

- name: "CIS: copy banner to /etc/issue, /etc/issue.net"
  copy:
    src: banner
    dest: "/etc/{{ item }}"
    owner: root
    group: root
    mode: 0600
  with_items:
    - issue
    - issue.net

- name: "CIS: blank motd"
  copy:
    dest: "/etc/motd"
    owner: root
    group: root
    mode: 0600
    force: no
    content: ""

- name: "CIS: ensure SELinux is enforcing"
  selinux:
    policy: targeted
    state: enforcing
  when: ansible_os_family == 'RedHat'

