---

- name: retrieve platform
  shell: "show platform summary | grep 'Platform:' | cut -d : -f 2 | sed 's/ //g'"
  register: shellcmd
  failed_when: shellcmd.stdout | length == 0
  changed_when: False

- name: set platform fact
  set_fact:
    platform: "{{ shellcmd.stdout }}"

- name: retrieve hwsku
  shell: "show platform summary | grep 'HwSKU:' | cut -d : -f 2 | sed 's/ //g'"
  register: shellcmd
  failed_when: shellcmd.stdout | length == 0
  changed_when: False

- name: set hwsku fact
  set_fact:
    hwsku: "{{ shellcmd.stdout }}"

- name: Parse port_config.ini
  script: port_config_to_json.sh /usr/share/sonic/device/{{ platform }}/{{ hwsku }}/port_config.ini
  register: port_config
  failed_when: port_config.stdout | length == 0
  changed_when: False

- name: Load port config from JSON
  set_fact:
    ports: "{{ port_config.stdout|from_yaml }}"

- name: Load current system config
  slurp:
    src: "/etc/sonic/config_db.json"
  register: current_config_data

- name: Parse current system config
  set_fact:
    current_config: "{{ current_config_data.content|b64decode|from_yaml }}"

# Split generating and parsing into 2 steps for better error handling
- name: Generate custom configs
  set_fact:
    port_json: "{{ lookup('template', 'PORT.j2') }}"
    interface_json: "{{ lookup('template', 'INTERFACE.j2') }}"
    loopback_json: "{{ lookup('template', 'LOOPBACK.j2') }}"
    vxlan_json: "{{ lookup('template', 'VXLAN.j2') }}"
    device_metadata_json: "{{ lookup('template', 'DEVICE_METADATA.j2') }}"

- name: Parse custom configs
  set_fact:
    port: "{{ port_json|from_yaml }}"
    interface: "{{ interface_json|from_yaml }}"
    loopback: "{{ loopback_json|from_yaml }}"
    vxlan: "{{ vxlan_json|from_yaml }}"
    device_metadata: "{{ device_metadata_json|from_yaml }}"

- name: Merge final config
  set_fact:
    config: |
      {{ current_config
          | combine(port, list_merge='replace')
          | combine(interface, list_merge='replace')
          | combine(loopback, list_merge='replace')
          | combine(vxlan, list_merge='replace')
          | combine(device_metadata, recursive=True)
          | ansible.utils.remove_keys(target=['^BGP_NEIGHBOR$', '^BGP_PEER_RANGE$', '^BGP_GLOBALS_AF_NETWORK$', '^BGP_NEIGHBOR_AF$', '^BGP_GLOBALS$'], matching_parameter='regex')
          | to_nice_json }}

- name: Write configuration
  copy:
    content: "{{ config }}"
    dest: /etc/sonic/config_db.json
  notify: sonic_config_update

- name: Write BGP configuration
  template:
    src: bgpd.conf.j2
    dest: /etc/sonic/frr/bgpd.conf
  notify: sonic_bgp_update


