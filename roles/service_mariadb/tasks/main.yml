---

- name: Perform Distribution-specific tasks
  import_tasks: "rhel.yml"
  when: ansible_os_family == 'RedHat'

- name: Perform Distribution-specific tasks
  import_tasks: "debian.yml"
  when: ansible_os_family == 'Debian'

- name: "Gather mariadb hosts"
  set_fact:
    mariadb_hosts_json: "{{ lookup('template', 'mariadb_hosts.j2') }}"
  when: mariadb_cluster|default(false)

- name: "Parse mariadb hosts"
  set_fact:
    mariadb_hosts: "{{ mariadb_hosts_json|from_yaml }}"
  when: mariadb_cluster|default(false)

- name: "Add known mariadb nodes to /etc/hosts"
  lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item]['mariadb_cluster_ip']}} {{ item|split('.')|first }} {{ item }}"
  with_items: "{{ mariadb_hosts | reject('search', inventory_hostname | split('.') | first ) }}"
  when: mariadb_cluster|default(false)

- name:
  set_fact:
    mariadb_config_dir: "{{ '/etc/my.cnf.d/' if ansible_os_family == 'RedHat' else '/etc/mysql/mariadb.conf.d/' }}"
    mariadb_sock: "{{ '/var/lib/mysql/mysql.sock' if ansible_os_family == 'Redhat' else '/run/mysqld/mysqld.sock' }}"

- name: Install configuration
  template:
    src: 99_base.cnf.j2
    dest: "{{ mariadb_config_dir }}/99_base.cnf"
    owner: root
    group: root
    mode: 0644
  notify: "{{ 'mariadb_restart' if not mariadb_bootstrap|default(false) else 'noop' }}"

- name: Install cluster configuration
  template:
    src: 99_cluster.cnf.j2
    dest: "{{ mariadb_config_dir }}/99_cluster.cnf"
    owner: root
    group: root
    mode: 0644
  notify: "{{ 'mariadb_restart' if not mariadb_bootstrap|default(false) else 'noop' }}"

- name: Create clustercheck health check script
  template:
    src: clustercheck.j2
    dest: /usr/local/bin/clustercheck
    owner: root
    mode: 755
  when: mariadb_cluster|default(false)

- name: Enable MariaDB
  service:
    name: mariadb
    enabled: true

- name: Ensure cluster is online
  import_tasks: "cluster-start.yml"
  vars:
    mariadb_start_all_nodes: false
  when: mariadb_cluster|default(false)

- name: Ensure MariaDB is started
  service:
    name: mariadb
    state: started
  register: mariadb_started

- name: Wait for sync if joining cluster and not bootstrap
  ansible.builtin.shell: /usr/local/bin/clustercheck
  register: result
  until: result.rc == 0
  changed_when: false
  retries: 90
  delay: 10
  when: mariadb_cluster|default(false)

- name: Set root password for MariaDB for localhost
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    login_unix_socket: "{{ mariadb_sock }}"
    name: root
    password: "{{ mariadb_root_password }}"
    host: "{{ item }}"
  with_items:
    - localhost
    - 127.0.0.1
    - ::1
  run_once: "{{ mariadb_cluster|default(false) }}"

- name: Remove root password for MariaDB for non-localhost users
  community.mysql.mysql_user:
    login_unix_socket: "{{ mariadb_sock }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    name: root
    host: "{{ inventory_hostname }}"
    state: absent
  run_once: "{{ mariadb_cluster|default(false) }}"

- name: Remove all anonymous users from MariaDB
  community.mysql.mysql_user:
    login_unix_socket: "{{ mariadb_sock }}"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    name: ''
    host_all: yes
    state: absent
  run_once: "{{ mariadb_cluster|default(false) }}"

- name: Ensure Mariadb users needed for the cluster are created
  import_tasks: "cluster-users.yml"
  when: mariadb_cluster|default(false)
