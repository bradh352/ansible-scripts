---

- name: Perform Distribution-specific tasks
  include_tasks: "rhel.yml"
  when: ansible_os_family == 'RedHat'

- name: Perform Distribution-specific tasks
  include_tasks: "debian.yml"
  when: ansible_os_family == 'Debian'

- name: "Gather mariadb hosts"
  set_fact:
    mariadb_hosts_json: "{{ lookup('template', 'mariadb_hosts.j2') }}"
  when: mariadb_cluster|default(false)

- name: "Parse mariadb hosts"
  set_fact:
    mariadb_hosts: "{{ mariadb_hosts_json|from_yaml }}"
  when: mariadb_cluster|default(false)

- name: "Add known mariadb nodes to /etc/hosts"
  lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item]['mariadb_cluster_ip']}} {{ item|split('.')|first }} {{ item }}"
  with_items: "{{ mariadb_hosts | reject('search', inventory_hostname | split('.') | first ) }}"

- name: Install configuration
  template:
    src: zcustom_base.cnf
    dest: /etc/my.cnf.d/zcustom_base.cnf
    owner: root
    group: root
    mode: 0644
  notify: mariadb_restart

- name: Install cluster configuration
  template:
    src: cluster.cnf.j2
    dest: /etc/my.cnf.d/cluster.cnf
    owner: root
    group: root
    mode: 0644
  when:
  notify: mariadb_restart

- name: Start and Enable MariaDB
  service:
    name: "{{ 'mariadb' if not mariadb_bootstrap|default(false) else 'mariadb@bootstrap' }}"
    enabled: true
    state: started

- name: Set root password for MariaDB for localhost
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    login_unix_socket: /var/lib/mysql/mysql.sock
    name: root
    password: "{{ mariadb_root_password }}"
    host: "{{ item }}"
  with_items:
    - localhost
    - 127.0.0.1
    - ::1

- name: Remove root password for MariaDB for non-localhost users
  community.mysql.mysql_user:
    login_unix_socket: /var/lib/mysql/mysql.sock
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    name: root
    host: "{{ inventory_hostname }}"
    state: absent

- name: Remove all anonymous users from MariaDB
  community.mysql.mysql_user:
    login_unix_socket: /var/lib/mysql/mysql.sock
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    name: ''
    host_all: yes
    state: absent

- name: Make cluster sync user for SST
  community.mysql.mysql_user:
    login_unix_socket: /var/lib/mysql/mysql.sock
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    name: "{{ mariadb_sst_username }}"
    password: "{{ mariadb_sst_password }}"
    host: "localhost"
    priv: "*.*:RELOAD,PROCESS,LOCK TABLES,BINLOG MONITOR,REPLICATION CLIENT"

- name: Make cluster health check user
  community.mysql.mysql_user:
    login_unix_socket: /var/lib/mysql/mysql.sock
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    check_implicit_admin: true
    column_case_sensitive: false
    name: "{{ mariadb_clustercheck_username }}"
    password: "{{ mariadb_clustercheck_password }}"
    host: "localhost"
    priv: "*.*:PROCESS"

- name: Create clustercheck health check script
  template:
    src: clustercheck.j2
    dest: /usr/local/bin/clustercheck
    owner: root
    mode: 755

